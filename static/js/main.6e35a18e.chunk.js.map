{"version":3,"sources":["components/Cards.js","components/Gameboard.js","components/Game.js","components/App.js","index.js"],"names":["Cards","props","status","updateChances","chance","allCardPool","name","content","useState","cards","setCards","flip","currentCard","setCurrentCard","pickedCards","setPickedCards","showPickedCards","setShowPickedCards","onClickCard","tempCards","cardPicked","splice","Math","floor","random","length","cardPickedStatus","pickCard","useEffect","pickedCardsList","map","pickedCard","index","className","newCard","flipClass","onClick","generateCard","type","disabled","Gameboard","Game","chances","setStatus","setChances","App","year","Date","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6e35a18e.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\n\nconst Cards = (props) => {\n  const { status, updateChances, chance } = props;\n\n  const allCardPool = [\n    { name: \"Small Wish\", content: \"10 Minutes Massage\" },\n    { name: \"Small Wish\", content: \"15 Minutes Massage\" },\n    { name: \"Small Wish\", content: \"20 Minutes Massage\" },\n    { name: \"Small Wish\", content: \"30 Minutes Massage\" },\n    { name: \"Big Wish\", content: \"Massage x 1 hour\" },\n    { name: \"Big Wish\", content: \"Wash Hair x 1 times\" },\n    { name: \"Big Wish\", content: \"Massage x 2 times\" },\n    { name: \"Gift\", content: \"Anything worth up to $1000\" },\n    { name: \"Super Big Wish\", content: \"Anytime x 1 times\" },\n    { name: \"Untimate JackPot\", content: \"A Real Wish Saved for later\" },\n    { name: \"Double Reward\", content: \"Next Wish x 2\" },\n  ];\n  const [cards, setCards] = useState(allCardPool);\n  const [currentCard, setCurrentCard] = useState({\n    name: \"\",\n    flip: false,\n    content: \"\",\n  });\n  const [pickedCards, setPickedCards] = useState([]);\n  const [showPickedCards, setShowPickedCards] = useState(false);\n\n  // flip a random card and update rest card pool\n  function pickCard() {\n    const tempCards = cards;\n    const cardPicked = tempCards.splice(\n      Math.floor(Math.random() * tempCards.length),\n      1\n    );\n    const cardPickedStatus = {\n      name: cardPicked[0].name,\n      flip: true,\n      content: cardPicked[0].content,\n    };\n    updateChances();\n    setCards(tempCards);\n    setCurrentCard(cardPickedStatus);\n  }\n\n  // trigger when a card is flipped\n  // work if card not flipped yet and the game is running\n  const onClickCard = () => {\n    if (!currentCard.flip && status) {\n      pickCard();\n    }\n  };\n\n  // single card content\n  const generateCard = (newCard) => {\n    const flipClass = newCard.flip && status ? \"card--flipped\" : \"\";\n    return (\n      <div className={`card ${flipClass}`} onClick={onClickCard}>\n        <div className=\"card__face card__face--front\"></div>\n        <div className=\"card__face card__face--back\">\n          <div className=\"card__content\">\n            <h4>{currentCard.name}</h4>\n            <p>{currentCard.content}</p>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const nextCardClick = () => {\n    setCurrentCard({\n      ...currentCard,\n      name: \"\",\n      flip: false,\n      content: \"\",\n    });\n  };\n\n  useEffect(() => {\n    if (currentCard.name) {\n      setPickedCards([...pickedCards, currentCard]);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentCard]);\n\n  useEffect(() => {\n    // reset cards when game reset\n    if (!status) {\n      setCurrentCard({ ...currentCard, name: \"\", flip: false, content: \"\" });\n      setCards(allCardPool);\n      setPickedCards([]);\n      setShowPickedCards(false);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [status]);\n\n  const pickedCardsList = pickedCards?.map((pickedCard, index) => (\n    <div className=\"card-list__picked\" key={index}>\n      <h6>{pickedCard.name}</h6>\n      <p>{pickedCard.content}</p>\n    </div>\n  ));\n\n  return (\n    <div className=\"game-board__content\">\n      <div className={`card-body ${showPickedCards ? \"card-list\" : \"\"}`}>\n        {showPickedCards ? <span>Happy Birthday, Darling!!! </span> : \"\"}\n        {showPickedCards ? pickedCardsList : generateCard(currentCard)}\n      </div>\n\n      <button\n        onClick={nextCardClick}\n        className=\"card-stats__button\"\n        type=\"button\"\n        disabled={!currentCard.flip || chance <= 0 || !status}\n      >\n        Next Card\n      </button>\n      <button\n        onClick={() => setShowPickedCards(true)}\n        className=\"card-stats__button\"\n        type=\"button\"\n        disabled={!currentCard.flip || chance > 0 || showPickedCards}\n      >\n        Check My Wish\n      </button>\n    </div>\n  );\n};\n\nexport default Cards;\n","import React from \"react\";\nimport Cards from \"./Cards\";\n\nconst Gameboard = (props) => {\n  const { status, updateChances, chance } = props;\n\n  return (\n    <>\n      <div className=\"game-instruction\">\n        <h3 className=\"game-instruction__header\">\n          Instruction: - Just Flip ME\n        </h3>\n      </div>\n      <div className=\"game-board\">\n        <Cards status={status} updateChances={updateChances} chance={chance} />\n      </div>\n    </>\n  );\n};\n\nexport default Gameboard;\n","import { useEffect, useState } from \"react\";\nimport Gameboard from \"./Gameboard\";\n\nconst Game = (props) => {\n  const { chances } = props;\n  const [status, setStatus] = useState(false);\n  const [chance, setChances] = useState(chances);\n\n  function newGameClick() {\n    setStatus(!status);\n  }\n\n  useEffect(() => {\n    if (!status) {\n      setChances(chances);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [status]);\n\n  function updateChances() {\n    setChances(chance - 1);\n  }\n\n  return (\n    <div>\n      {/* {console.log(chances)} */}\n      <div className=\"game-stats\">\n        <div className=\"game-stats__score\">\n          <div className=\"game-stats__score--label\">Cards Left:</div>\n          <div className=\"game-stats__score--value\">{chance}</div>\n        </div>\n        <button\n          onClick={newGameClick}\n          className=\"game-stats__button\"\n          type=\"button\"\n        >\n          {status ? \"Reset Game\" : \"Start Game\"}\n        </button>\n      </div>\n\n      <Gameboard\n        status={status}\n        updateChances={updateChances}\n        chance={chance}\n      />\n    </div>\n  );\n};\n\nexport default Game;\n","import Game from \"./Game\";\nimport \"../css/style.scss\";\n\nfunction App() {\n  const year = new Date().getFullYear();\n  return (\n    <div className=\"game\">\n      <h1 className=\"game-title\">Wish Cards</h1>\n      <Game chances={5} />\n      <div className=\"copyright\">\n        Copyright Â© {year} <br /> Designed for Ashely Zheng\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}